name: main

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm install
      - name: Lint Code
        run: npm run lint
      - name: Run Unit Tests
        run: npm run test
        
  build_image:
   strategy:
        matrix:
          node-version: [20.x]
   needs: ['setup'] 
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Dependencies
      run: npm install
    - name: Cache Action
      uses: actions/cache@v4
      with:
            # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
            path: |
              ~/.npm
              ${{ github.workspace }}/.next/cache
            # Generate a new cache whenever packages or source files change.
            key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
            # If source files changed but packages didn't, rebuild from a prior cache.
            restore-keys: |
              ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        ecr: auto
        logout: false
    - name: Docker Metadata action
      uses: docker/metadata-action@v5.5.0
      with:
        context: workflow
        github-token: ${{secrets.GIT_HUB_TOKEN }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v5.1.0
      with:
        context: .
        push: true
        tags: luke0195/contasapp:latest
        github-token: ${{ secrets.GIT_HUB_TOKEN }}
              
    
      
       
